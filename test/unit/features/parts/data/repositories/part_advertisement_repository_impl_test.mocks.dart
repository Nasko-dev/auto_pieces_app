// Mocks generated by Mockito 5.4.6 from annotations
// in cente_pice/test/unit/features/parts/data/repositories/part_advertisement_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cente_pice/src/core/network/network_info.dart' as _i5;
import 'package:cente_pice/src/features/parts/data/datasources/part_advertisement_remote_datasource.dart'
    as _i3;
import 'package:cente_pice/src/features/parts/data/models/part_advertisement_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePartAdvertisementModel_0 extends _i1.SmartFake
    implements _i2.PartAdvertisementModel {
  _FakePartAdvertisementModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PartAdvertisementRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPartAdvertisementRemoteDataSource extends _i1.Mock
    implements _i3.PartAdvertisementRemoteDataSource {
  MockPartAdvertisementRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PartAdvertisementModel> createPartAdvertisement(
          _i2.CreatePartAdvertisementParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPartAdvertisement,
          [params],
        ),
        returnValue: _i4.Future<_i2.PartAdvertisementModel>.value(
            _FakePartAdvertisementModel_0(
          this,
          Invocation.method(
            #createPartAdvertisement,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.PartAdvertisementModel>);

  @override
  _i4.Future<_i2.PartAdvertisementModel> getPartAdvertisementById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartAdvertisementById,
          [id],
        ),
        returnValue: _i4.Future<_i2.PartAdvertisementModel>.value(
            _FakePartAdvertisementModel_0(
          this,
          Invocation.method(
            #getPartAdvertisementById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.PartAdvertisementModel>);

  @override
  _i4.Future<List<_i2.PartAdvertisementModel>> getMyPartAdvertisements(
          {String? particulierId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyPartAdvertisements,
          [],
          {#particulierId: particulierId},
        ),
        returnValue: _i4.Future<List<_i2.PartAdvertisementModel>>.value(
            <_i2.PartAdvertisementModel>[]),
      ) as _i4.Future<List<_i2.PartAdvertisementModel>>);

  @override
  _i4.Future<String?> getParticulierIdFromDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #getParticulierIdFromDeviceId,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<List<_i2.PartAdvertisementModel>> searchPartAdvertisements(
          _i2.SearchPartAdvertisementsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPartAdvertisements,
          [params],
        ),
        returnValue: _i4.Future<List<_i2.PartAdvertisementModel>>.value(
            <_i2.PartAdvertisementModel>[]),
      ) as _i4.Future<List<_i2.PartAdvertisementModel>>);

  @override
  _i4.Future<_i2.PartAdvertisementModel> updatePartAdvertisement(
    String? id,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePartAdvertisement,
          [
            id,
            updates,
          ],
        ),
        returnValue: _i4.Future<_i2.PartAdvertisementModel>.value(
            _FakePartAdvertisementModel_0(
          this,
          Invocation.method(
            #updatePartAdvertisement,
            [
              id,
              updates,
            ],
          ),
        )),
      ) as _i4.Future<_i2.PartAdvertisementModel>);

  @override
  _i4.Future<void> deletePartAdvertisement(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePartAdvertisement,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markAsSold(String? id) => (super.noSuchMethod(
        Invocation.method(
          #markAsSold,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> incrementViewCount(String? id) => (super.noSuchMethod(
        Invocation.method(
          #incrementViewCount,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> incrementContactCount(String? id) => (super.noSuchMethod(
        Invocation.method(
          #incrementContactCount,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
