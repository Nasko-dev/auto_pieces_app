// Mocks generated by Mockito 5.4.4 from annotations
// in cente_pice/test/unit/features/parts/data/repositories/conversations_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cente_pice/src/features/parts/data/datasources/conversations_remote_datasource.dart'
    as _i4;
import 'package:cente_pice/src/features/parts/domain/entities/conversation.dart'
    as _i3;
import 'package:cente_pice/src/features/parts/domain/entities/conversation_enums.dart'
    as _i6;
import 'package:cente_pice/src/features/parts/domain/entities/message.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMessage_0 extends _i1.SmartFake implements _i2.Message {
  _FakeMessage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConversation_1 extends _i1.SmartFake implements _i3.Conversation {
  _FakeConversation_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConversationsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockConversationsRemoteDataSource extends _i1.Mock
    implements _i4.ConversationsRemoteDataSource {
  MockConversationsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.Conversation>> getConversations(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversations,
          [],
          {#userId: userId},
        ),
        returnValue:
            _i5.Future<List<_i3.Conversation>>.value(<_i3.Conversation>[]),
      ) as _i5.Future<List<_i3.Conversation>>);

  @override
  _i5.Future<List<_i2.Message>> getConversationMessages(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationMessages,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<List<_i2.Message>>.value(<_i2.Message>[]),
      ) as _i5.Future<List<_i2.Message>>);

  @override
  _i5.Future<_i2.Message> sendMessage({
    required String? conversationId,
    required String? senderId,
    required String? content,
    _i6.MessageType? messageType = _i6.MessageType.text,
    List<String>? attachments = const [],
    Map<String, dynamic>? metadata = const {},
    double? offerPrice,
    String? offerAvailability,
    int? offerDeliveryDays,
    _i6.MessageSenderType? senderType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #conversationId: conversationId,
            #senderId: senderId,
            #content: content,
            #messageType: messageType,
            #attachments: attachments,
            #metadata: metadata,
            #offerPrice: offerPrice,
            #offerAvailability: offerAvailability,
            #offerDeliveryDays: offerDeliveryDays,
            #senderType: senderType,
          },
        ),
        returnValue: _i5.Future<_i2.Message>.value(_FakeMessage_0(
          this,
          Invocation.method(
            #sendMessage,
            [],
            {
              #conversationId: conversationId,
              #senderId: senderId,
              #content: content,
              #messageType: messageType,
              #attachments: attachments,
              #metadata: metadata,
              #offerPrice: offerPrice,
              #offerAvailability: offerAvailability,
              #offerDeliveryDays: offerDeliveryDays,
              #senderType: senderType,
            },
          ),
        )),
      ) as _i5.Future<_i2.Message>);

  @override
  _i5.Future<void> markMessagesAsRead({
    required String? conversationId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessagesAsRead,
          [],
          {
            #conversationId: conversationId,
            #userId: userId,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> incrementUnreadCount({required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCount,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> incrementUnreadCountForUser(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForUser,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> incrementUnreadCountForSeller(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForSeller,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateConversationStatus({
    required String? conversationId,
    required _i6.ConversationStatus? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConversationStatus,
          [],
          {
            #conversationId: conversationId,
            #status: status,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteConversation({required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteConversation,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> blockConversation({required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #blockConversation,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<_i2.Message> subscribeToNewMessages(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToNewMessages,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i5.Stream<_i2.Message>.empty(),
      ) as _i5.Stream<_i2.Message>);

  @override
  _i5.Stream<_i3.Conversation> subscribeToConversationUpdates(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToConversationUpdates,
          [],
          {#userId: userId},
        ),
        returnValue: _i5.Stream<_i3.Conversation>.empty(),
      ) as _i5.Stream<_i3.Conversation>);

  @override
  _i5.Future<_i3.Conversation> createOrGetConversation({
    required String? requestId,
    required String? userId,
    required String? sellerId,
    required String? sellerName,
    String? sellerCompany,
    required String? requestTitle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrGetConversation,
          [],
          {
            #requestId: requestId,
            #userId: userId,
            #sellerId: sellerId,
            #sellerName: sellerName,
            #sellerCompany: sellerCompany,
            #requestTitle: requestTitle,
          },
        ),
        returnValue: _i5.Future<_i3.Conversation>.value(_FakeConversation_1(
          this,
          Invocation.method(
            #createOrGetConversation,
            [],
            {
              #requestId: requestId,
              #userId: userId,
              #sellerId: sellerId,
              #sellerName: sellerName,
              #sellerCompany: sellerCompany,
              #requestTitle: requestTitle,
            },
          ),
        )),
      ) as _i5.Future<_i3.Conversation>);
}
