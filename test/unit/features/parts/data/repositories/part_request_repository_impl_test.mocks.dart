// Mocks generated by Mockito 5.4.6 from annotations
// in cente_pice/test/unit/features/parts/data/repositories/part_request_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cente_pice/src/core/network/network_info.dart' as _i8;
import 'package:cente_pice/src/features/parts/data/datasources/part_request_remote_datasource.dart'
    as _i5;
import 'package:cente_pice/src/features/parts/data/models/part_request_model.dart'
    as _i2;
import 'package:cente_pice/src/features/parts/domain/entities/part_request.dart'
    as _i7;
import 'package:cente_pice/src/features/parts/domain/entities/particulier_conversation.dart'
    as _i4;
import 'package:cente_pice/src/features/parts/domain/entities/seller_rejection.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePartRequestModel_0 extends _i1.SmartFake
    implements _i2.PartRequestModel {
  _FakePartRequestModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSellerRejection_1 extends _i1.SmartFake
    implements _i3.SellerRejection {
  _FakeSellerRejection_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeParticulierConversation_2 extends _i1.SmartFake
    implements _i4.ParticulierConversation {
  _FakeParticulierConversation_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PartRequestRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPartRequestRemoteDataSource extends _i1.Mock
    implements _i5.PartRequestRemoteDataSource {
  MockPartRequestRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i2.PartRequestModel>> getUserPartRequests() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserPartRequests,
          [],
        ),
        returnValue: _i6.Future<List<_i2.PartRequestModel>>.value(
            <_i2.PartRequestModel>[]),
      ) as _i6.Future<List<_i2.PartRequestModel>>);

  @override
  _i6.Future<_i2.PartRequestModel> createPartRequest(
          _i7.CreatePartRequestParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPartRequest,
          [params],
        ),
        returnValue:
            _i6.Future<_i2.PartRequestModel>.value(_FakePartRequestModel_0(
          this,
          Invocation.method(
            #createPartRequest,
            [params],
          ),
        )),
      ) as _i6.Future<_i2.PartRequestModel>);

  @override
  _i6.Future<_i2.PartRequestModel> getPartRequestById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartRequestById,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.PartRequestModel>.value(_FakePartRequestModel_0(
          this,
          Invocation.method(
            #getPartRequestById,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.PartRequestModel>);

  @override
  _i6.Future<_i2.PartRequestModel> updatePartRequestStatus(
    String? id,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePartRequestStatus,
          [
            id,
            status,
          ],
        ),
        returnValue:
            _i6.Future<_i2.PartRequestModel>.value(_FakePartRequestModel_0(
          this,
          Invocation.method(
            #updatePartRequestStatus,
            [
              id,
              status,
            ],
          ),
        )),
      ) as _i6.Future<_i2.PartRequestModel>);

  @override
  _i6.Future<void> deletePartRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePartRequest,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> hasActivePartRequest() => (super.noSuchMethod(
        Invocation.method(
          #hasActivePartRequest,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getPartRequestResponses(
          String? requestId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartRequestResponses,
          [requestId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<List<_i2.PartRequestModel>> searchPartRequests({
    String? partType,
    String? vehicleBrand,
    String? status,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPartRequests,
          [],
          {
            #partType: partType,
            #vehicleBrand: vehicleBrand,
            #status: status,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i6.Future<List<_i2.PartRequestModel>>.value(
            <_i2.PartRequestModel>[]),
      ) as _i6.Future<List<_i2.PartRequestModel>>);

  @override
  _i6.Future<Map<String, int>> getPartRequestStats() => (super.noSuchMethod(
        Invocation.method(
          #getPartRequestStats,
          [],
        ),
        returnValue: _i6.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i6.Future<Map<String, int>>);

  @override
  _i6.Future<List<_i2.PartRequestModel>> getActivePartRequestsForSeller() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivePartRequestsForSeller,
          [],
        ),
        returnValue: _i6.Future<List<_i2.PartRequestModel>>.value(
            <_i2.PartRequestModel>[]),
      ) as _i6.Future<List<_i2.PartRequestModel>>);

  @override
  _i6.Future<List<_i2.PartRequestModel>>
      getActivePartRequestsForSellerWithRejections() => (super.noSuchMethod(
            Invocation.method(
              #getActivePartRequestsForSellerWithRejections,
              [],
            ),
            returnValue: _i6.Future<List<_i2.PartRequestModel>>.value(
                <_i2.PartRequestModel>[]),
          ) as _i6.Future<List<_i2.PartRequestModel>>);

  @override
  _i6.Future<List<_i2.PartRequestModel>> getSellerOwnRequests() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSellerOwnRequests,
          [],
        ),
        returnValue: _i6.Future<List<_i2.PartRequestModel>>.value(
            <_i2.PartRequestModel>[]),
      ) as _i6.Future<List<_i2.PartRequestModel>>);

  @override
  _i6.Future<Map<String, dynamic>> createSellerResponse({
    required String? requestId,
    required String? sellerId,
    required String? message,
    double? price,
    String? availability,
    int? estimatedDeliveryDays,
    List<String>? attachments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSellerResponse,
          [],
          {
            #requestId: requestId,
            #sellerId: sellerId,
            #message: message,
            #price: price,
            #availability: availability,
            #estimatedDeliveryDays: estimatedDeliveryDays,
            #attachments: attachments,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> acceptSellerResponse(String? responseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptSellerResponse,
          [responseId],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> rejectSellerResponse(String? responseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectSellerResponse,
          [responseId],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getSellerConversations(
          String? sellerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSellerConversations,
          [sellerId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<Map<String, dynamic>> getConversationById(
          String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationById,
          [conversationId],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getConversationMessages(
          String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationMessages,
          [conversationId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<Map<String, dynamic>> sendMessage({
    required String? conversationId,
    required String? senderId,
    required String? senderType,
    required String? content,
    String? messageType = 'text',
    double? offerPrice,
    String? offerAvailability,
    int? offerDeliveryDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #conversationId: conversationId,
            #senderId: senderId,
            #senderType: senderType,
            #content: content,
            #messageType: messageType,
            #offerPrice: offerPrice,
            #offerAvailability: offerAvailability,
            #offerDeliveryDays: offerDeliveryDays,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<void> markMessagesAsRead(
    String? conversationId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessagesAsRead,
          [
            conversationId,
            userId,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.SellerRejection> rejectPartRequest(
          _i3.SellerRejection? rejection) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectPartRequest,
          [rejection],
        ),
        returnValue:
            _i6.Future<_i3.SellerRejection>.value(_FakeSellerRejection_1(
          this,
          Invocation.method(
            #rejectPartRequest,
            [rejection],
          ),
        )),
      ) as _i6.Future<_i3.SellerRejection>);

  @override
  _i6.Future<List<_i3.SellerRejection>> getSellerRejections(String? sellerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSellerRejections,
          [sellerId],
        ),
        returnValue: _i6.Future<List<_i3.SellerRejection>>.value(
            <_i3.SellerRejection>[]),
      ) as _i6.Future<List<_i3.SellerRejection>>);

  @override
  _i6.Future<List<_i4.ParticulierConversation>> getParticulierConversations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getParticulierConversations,
          [],
        ),
        returnValue: _i6.Future<List<_i4.ParticulierConversation>>.value(
            <_i4.ParticulierConversation>[]),
      ) as _i6.Future<List<_i4.ParticulierConversation>>);

  @override
  _i6.Future<_i4.ParticulierConversation> getParticulierConversationById(
          String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getParticulierConversationById,
          [conversationId],
        ),
        returnValue: _i6.Future<_i4.ParticulierConversation>.value(
            _FakeParticulierConversation_2(
          this,
          Invocation.method(
            #getParticulierConversationById,
            [conversationId],
          ),
        )),
      ) as _i6.Future<_i4.ParticulierConversation>);

  @override
  _i6.Future<void> sendParticulierMessage({
    required String? conversationId,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendParticulierMessage,
          [],
          {
            #conversationId: conversationId,
            #content: content,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> markParticulierConversationAsRead(String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markParticulierConversationAsRead,
          [conversationId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> incrementUnreadCountForUser(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForUser,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> markParticulierMessagesAsRead(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markParticulierMessagesAsRead,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
