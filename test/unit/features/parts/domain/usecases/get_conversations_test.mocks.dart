// Mocks generated by Mockito 5.4.4 from annotations
// in cente_pice/test/unit/features/parts/domain/usecases/get_conversations_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cente_pice/src/core/errors/failures.dart' as _i5;
import 'package:cente_pice/src/features/parts/domain/entities/conversation.dart'
    as _i6;
import 'package:cente_pice/src/features/parts/domain/entities/conversation_enums.dart'
    as _i8;
import 'package:cente_pice/src/features/parts/domain/entities/message.dart'
    as _i7;
import 'package:cente_pice/src/features/parts/domain/repositories/conversations_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConversationsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockConversationsRepository extends _i1.Mock
    implements _i3.ConversationsRepository {
  MockConversationsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>> getConversations(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversations,
          [],
          {#userId: userId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Conversation>>(
          this,
          Invocation.method(
            #getConversations,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>
      getConversationMessages({required String? conversationId}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getConversationMessages,
              [],
              {#conversationId: conversationId},
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i7.Message>>(
              this,
              Invocation.method(
                #getConversationMessages,
                [],
                {#conversationId: conversationId},
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Message>> sendMessage({
    required String? conversationId,
    required String? senderId,
    required String? content,
    _i8.MessageType? messageType = _i8.MessageType.text,
    List<String>? attachments = const [],
    Map<String, dynamic>? metadata = const {},
    double? offerPrice,
    String? offerAvailability,
    int? offerDeliveryDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #conversationId: conversationId,
            #senderId: senderId,
            #content: content,
            #messageType: messageType,
            #attachments: attachments,
            #metadata: metadata,
            #offerPrice: offerPrice,
            #offerAvailability: offerAvailability,
            #offerDeliveryDays: offerDeliveryDays,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Message>>.value(
            _FakeEither_0<_i5.Failure, _i7.Message>(
          this,
          Invocation.method(
            #sendMessage,
            [],
            {
              #conversationId: conversationId,
              #senderId: senderId,
              #content: content,
              #messageType: messageType,
              #attachments: attachments,
              #metadata: metadata,
              #offerPrice: offerPrice,
              #offerAvailability: offerAvailability,
              #offerDeliveryDays: offerDeliveryDays,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Message>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> markMessagesAsRead({
    required String? conversationId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessagesAsRead,
          [],
          {
            #conversationId: conversationId,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #markMessagesAsRead,
            [],
            {
              #conversationId: conversationId,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> incrementUnreadCount(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCount,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #incrementUnreadCount,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> incrementUnreadCountForUser(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForUser,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #incrementUnreadCountForUser,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> incrementUnreadCountForSeller(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForSeller,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #incrementUnreadCountForSeller,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteConversation(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteConversation,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteConversation,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> blockConversation(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #blockConversation,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #blockConversation,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> closeConversation(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #closeConversation,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #closeConversation,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Stream<_i2.Either<_i5.Failure, _i7.Message>> subscribeToNewMessages(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToNewMessages,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Stream<_i2.Either<_i5.Failure, _i7.Message>>.empty(),
      ) as _i4.Stream<_i2.Either<_i5.Failure, _i7.Message>>);

  @override
  _i4.Stream<_i2.Either<_i5.Failure, List<_i6.Conversation>>>
      subscribeToConversationUpdates({required String? userId}) =>
          (super.noSuchMethod(
            Invocation.method(
              #subscribeToConversationUpdates,
              [],
              {#userId: userId},
            ),
            returnValue: _i4.Stream<
                _i2.Either<_i5.Failure, List<_i6.Conversation>>>.empty(),
          ) as _i4.Stream<_i2.Either<_i5.Failure, List<_i6.Conversation>>>);
}
