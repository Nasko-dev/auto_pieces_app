// Mocks generated by Mockito 5.4.6 from annotations
// in cente_pice/test/unit/features/parts/domain/usecases/get_seller_settings_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cente_pice/src/core/errors/failures.dart' as _i5;
import 'package:cente_pice/src/features/parts/domain/entities/seller_settings.dart'
    as _i6;
import 'package:cente_pice/src/features/parts/domain/repositories/seller_settings_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SellerSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSellerSettingsRepository extends _i1.Mock
    implements _i3.SellerSettingsRepository {
  MockSellerSettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings?>> getSellerSettings(
          String? sellerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSellerSettings,
          [sellerId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings?>>.value(
                _FakeEither_0<_i5.Failure, _i6.SellerSettings?>(
          this,
          Invocation.method(
            #getSellerSettings,
            [sellerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings>> saveSellerSettings(
          _i6.SellerSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSellerSettings,
          [settings],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings>>.value(
                _FakeEither_0<_i5.Failure, _i6.SellerSettings>(
          this,
          Invocation.method(
            #saveSellerSettings,
            [settings],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SellerSettings>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteSellerSettings(
          String? sellerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSellerSettings,
          [sellerId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteSellerSettings,
            [sellerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}
