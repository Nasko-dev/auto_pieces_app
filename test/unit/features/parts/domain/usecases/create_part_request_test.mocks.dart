// Mocks generated by Mockito 5.4.4 from annotations
// in cente_pice/test/unit/features/parts/domain/usecases/create_part_request_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cente_pice/src/core/errors/failures.dart' as _i5;
import 'package:cente_pice/src/features/parts/domain/entities/part_request.dart'
    as _i6;
import 'package:cente_pice/src/features/parts/domain/entities/particulier_conversation.dart'
    as _i9;
import 'package:cente_pice/src/features/parts/domain/entities/seller_rejection.dart'
    as _i8;
import 'package:cente_pice/src/features/parts/domain/entities/seller_response.dart'
    as _i7;
import 'package:cente_pice/src/features/parts/domain/repositories/part_request_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PartRequestRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPartRequestRepository extends _i1.Mock
    implements _i3.PartRequestRepository {
  MockPartRequestRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>
      getUserPartRequests() => (super.noSuchMethod(
            Invocation.method(
              #getUserPartRequests,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.PartRequest>>(
              this,
              Invocation.method(
                #getUserPartRequests,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>> createPartRequest(
          _i6.CreatePartRequestParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPartRequest,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>.value(
            _FakeEither_0<_i5.Failure, _i6.PartRequest>(
          this,
          Invocation.method(
            #createPartRequest,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>> getPartRequestById(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartRequestById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>.value(
            _FakeEither_0<_i5.Failure, _i6.PartRequest>(
          this,
          Invocation.method(
            #getPartRequestById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>> updatePartRequestStatus(
    String? id,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePartRequestStatus,
          [
            id,
            status,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>.value(
            _FakeEither_0<_i5.Failure, _i6.PartRequest>(
          this,
          Invocation.method(
            #updatePartRequestStatus,
            [
              id,
              status,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PartRequest>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deletePartRequest(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePartRequest,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deletePartRequest,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> hasActivePartRequest() =>
      (super.noSuchMethod(
        Invocation.method(
          #hasActivePartRequest,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #hasActivePartRequest,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<
      _i2
      .Either<_i5.Failure, List<_i7.SellerResponse>>> getPartRequestResponses(
          String? requestId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartRequestResponses,
          [requestId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.SellerResponse>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.SellerResponse>>(
          this,
          Invocation.method(
            #getPartRequestResponses,
            [requestId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.SellerResponse>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>> acceptSellerResponse(
          String? responseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptSellerResponse,
          [responseId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>>.value(
                _FakeEither_0<_i5.Failure, _i7.SellerResponse>(
          this,
          Invocation.method(
            #acceptSellerResponse,
            [responseId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>> rejectSellerResponse(
          String? responseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectSellerResponse,
          [responseId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>>.value(
                _FakeEither_0<_i5.Failure, _i7.SellerResponse>(
          this,
          Invocation.method(
            #rejectSellerResponse,
            [responseId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.SellerResponse>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, List<_i6.PartRequest>>> searchPartRequests({
    String? partType,
    String? vehicleBrand,
    String? status,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPartRequests,
          [],
          {
            #partType: partType,
            #vehicleBrand: vehicleBrand,
            #status: status,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.PartRequest>>(
          this,
          Invocation.method(
            #searchPartRequests,
            [],
            {
              #partType: partType,
              #vehicleBrand: vehicleBrand,
              #status: status,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, Map<String, int>>> getPartRequestStats() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartRequestStats,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, Map<String, int>>>.value(
                _FakeEither_0<_i5.Failure, Map<String, int>>(
          this,
          Invocation.method(
            #getPartRequestStats,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, Map<String, int>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>
      getActivePartRequestsForSeller() => (super.noSuchMethod(
            Invocation.method(
              #getActivePartRequestsForSeller,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.PartRequest>>(
              this,
              Invocation.method(
                #getActivePartRequestsForSeller,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>
      getActivePartRequestsForSellerWithRejections() => (super.noSuchMethod(
            Invocation.method(
              #getActivePartRequestsForSellerWithRejections,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.PartRequest>>(
              this,
              Invocation.method(
                #getActivePartRequestsForSellerWithRejections,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PartRequest>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.SellerRejection>> rejectPartRequest(
          _i8.SellerRejection? rejection) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectPartRequest,
          [rejection],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i8.SellerRejection>>.value(
                _FakeEither_0<_i5.Failure, _i8.SellerRejection>(
          this,
          Invocation.method(
            #rejectPartRequest,
            [rejection],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.SellerRejection>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.SellerRejection>>>
      getSellerRejections(String? sellerId) => (super.noSuchMethod(
            Invocation.method(
              #getSellerRejections,
              [sellerId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i8.SellerRejection>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.SellerRejection>>(
              this,
              Invocation.method(
                #getSellerRejections,
                [sellerId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.SellerRejection>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.ParticulierConversation>>>
      getParticulierConversations() => (super.noSuchMethod(
            Invocation.method(
              #getParticulierConversations,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        List<_i9.ParticulierConversation>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.ParticulierConversation>>(
              this,
              Invocation.method(
                #getParticulierConversations,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, List<_i9.ParticulierConversation>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.ParticulierConversation>>
      getParticulierConversationById(String? conversationId) =>
          (super.noSuchMethod(
            Invocation.method(
              #getParticulierConversationById,
              [conversationId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i9.ParticulierConversation>>.value(
                _FakeEither_0<_i5.Failure, _i9.ParticulierConversation>(
              this,
              Invocation.method(
                #getParticulierConversationById,
                [conversationId],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, _i9.ParticulierConversation>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> sendParticulierMessage({
    required String? conversationId,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendParticulierMessage,
          [],
          {
            #conversationId: conversationId,
            #content: content,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #sendParticulierMessage,
            [],
            {
              #conversationId: conversationId,
              #content: content,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> markParticulierConversationAsRead(
          String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markParticulierConversationAsRead,
          [conversationId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #markParticulierConversationAsRead,
            [conversationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> incrementUnreadCountForUser(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCountForUser,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #incrementUnreadCountForUser,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> markParticulierMessagesAsRead(
          {required String? conversationId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markParticulierMessagesAsRead,
          [],
          {#conversationId: conversationId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #markParticulierMessagesAsRead,
            [],
            {#conversationId: conversationId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
